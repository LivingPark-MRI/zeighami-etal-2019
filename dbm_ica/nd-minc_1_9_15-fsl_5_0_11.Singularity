# Generated by: Neurodocker version 0.7.0+0.gdc97516.dirty
# Timestamp: 2022/10/30 16:52:49 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/ReproNim/neurodocker

Bootstrap: docker
From: neurodebian:bullseye

%post
su - root

export ND_ENTRYPOINT="/neurodocker/startup.sh"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    apt-utils \
    bzip2 \
    ca-certificates \
    curl \
    locales \
    unzip
apt-get clean
rm -rf /var/lib/apt/lists/*
sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
dpkg-reconfigure --frontend=noninteractive locales
update-locale LANG="en_US.UTF-8"
chmod 777 /opt && chmod a+s /opt
mkdir -p /neurodocker
if [ ! -f "$ND_ENTRYPOINT" ]; then
  echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
  echo 'set -e' >> "$ND_ENTRYPOINT"
  echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
  echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
fi
chmod -R 777 /neurodocker && chmod a+s /neurodocker

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    libgl1-mesa-dev \
    libgomp1 \
    libice6 \
    libjpeg62 \
    libsm6 \
    libx11-6 \
    libxext6 \
    libxi6 \
    libxmu6
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading MINC, BEASTLIB, and MODELS..."
mkdir -p /opt/minc-1.9.15
curl -fsSL --retry 5 https://dl.dropbox.com/s/40hjzizaqi91373/minc-toolkit-1.9.15-20170529-CentOS_6.9-x86_64.tar.gz \
| tar -xz -C /opt/minc-1.9.15 --strip-components 1
curl -fsSL --retry 5 http://packages.bic.mni.mcgill.ca/tgz/beast-library-1.1.tar.gz \
| tar -xz -C /opt/minc-1.9.15/share
curl -fsSL --retry 5 -o /tmp/mni_90a.zip http://www.bic.mni.mcgill.ca/~vfonov/icbm/2009/mni_icbm152_nlin_sym_09a_minc2.zip
unzip /tmp/mni_90a.zip -d /opt/minc-1.9.15/share/icbm152_model_09a
curl -fsSL --retry 5 -o /tmp/mni_90c.zip http://www.bic.mni.mcgill.ca/~vfonov/icbm/2009/mni_icbm152_nlin_sym_09c_minc2.zip
unzip /tmp/mni_90c.zip -d /opt/minc-1.9.15/share/icbm152_model_09c
sed -i 's+MINC_TOOLKIT=/opt/minc+MINC_TOOLKIT=/opt/minc-1.9.15+g' /opt/minc-1.9.15/minc-toolkit-config.sh
sed -i '$isource /opt/minc-1.9.15/minc-toolkit-config.sh' $ND_ENTRYPOINT
rm -rf /tmp/mni*

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    dc \
    file \
    libfontconfig1 \
    libfreetype6 \
    libgl1-mesa-dev \
    libgl1-mesa-dri \
    libglu1-mesa-dev \
    libgomp1 \
    libice6 \
    libxcursor1 \
    libxft2 \
    libxinerama1 \
    libxrandr2 \
    libxrender1 \
    libxt6 \
    sudo \
    wget
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading FSL ..."
mkdir -p /opt/fsl-5.0.11
curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.11-centos6_64.tar.gz \
| tar -xz -C /opt/fsl-5.0.11 --strip-components 1 
sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT
sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT
sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT
sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT
echo "Installing FSL conda environment ..."
bash /opt/fsl-5.0.11/etc/fslconf/fslpython_install.sh -f /opt/fsl-5.0.11


export PATH="/opt/miniconda-py39_4.12.0/bin:$PATH"
echo "Downloading Miniconda installer ..."
conda_installer="/tmp/miniconda.sh"
curl -fsSL --retry 5 -o "$conda_installer" https://repo.continuum.io/miniconda/Miniconda3-py39_4.12.0-Linux-x86_64.sh
bash "$conda_installer" -b -p /opt/miniconda-py39_4.12.0
rm -f "$conda_installer"
conda config --system --prepend channels conda-forge
conda config --system --set auto_update_conda false
conda config --system --set show_channel_urls true
sync && conda clean -y --all && sync
conda install -y -q --name base \
    "click=8.1.3"
sync && conda clean -y --all && sync


echo '{
\n  "pkg_manager": "apt",
\n  "instructions": [
\n    [
\n      "base",
\n      "neurodebian:bullseye"
\n    ],
\n    [
\n      "user",
\n      "root"
\n    ],
\n    [
\n      "_header",
\n      {
\n        "version": "generic",
\n        "method": "custom"
\n      }
\n    ],
\n    [
\n      "minc",
\n      {
\n        "version": "1.9.15"
\n      }
\n    ],
\n    [
\n      "fsl",
\n      {
\n        "version": "5.0.11"
\n      }
\n    ],
\n    [
\n      "miniconda",
\n      {
\n        "version": "py39_4.12.0",
\n        "use_env": "base",
\n        "conda_install": [
\n          "click=8.1.3"
\n        ]
\n      }
\n    ]
\n  ]
\n}' > /neurodocker/neurodocker_specs.json

%environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ND_ENTRYPOINT="/neurodocker/startup.sh"
export FSLDIR="/opt/fsl-5.0.11"
export PATH="/opt/fsl-5.0.11/bin:$PATH"
export FSLOUTPUTTYPE="NIFTI_GZ"
export FSLMULTIFILEQUIT="TRUE"
export FSLTCLSH="/opt/fsl-5.0.11/bin/fsltclsh"
export FSLWISH="/opt/fsl-5.0.11/bin/fslwish"
export FSLLOCKDIR=""
export FSLMACHINELIST=""
export FSLREMOTECALL=""
export FSLGECUDAQ="cuda.q"
export CONDA_DIR="/opt/miniconda-py39_4.12.0"
export PATH="/opt/miniconda-py39_4.12.0/bin:$PATH"

%runscript
/neurodocker/startup.sh "$@"
